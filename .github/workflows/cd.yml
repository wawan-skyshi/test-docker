# This is a basic workflow to help you get started with Actions

name: Node.js CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Deploy to Server
        env:
            PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOST  }}
            USER_NAME : ${{ secrets.USERNAME  }}
        run: |
          echo "${PRIVATE_KEY}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd ~/msib/test-docker
            git pull
            docker build -t test-docker/app:latest .
            docker compose up -d
            docker image prune -a -f
          '

    # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:
    # - name: Deploy using ssh
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.PRIVATE_KEY }}
    #     port: 22
    #     script: |
    #       cd ~/msib/test-docker
    #       git pull
    #       docker build -t test-docker/app:latest .
    #       docker compose up -d
    #       docker image prune -a -f
